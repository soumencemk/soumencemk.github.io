<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JBake</title>
    <link>http://jbake.org</link>
    <atom:link href="http://jbake.org/feed.xml" rel="self" type="application/rss+xml" />
    <description>JBake Bootstrap Template</description>
    <language>en-gb</language>
    <pubDate>Mon, 26 Jul 2021 15:12:01 +0100</pubDate>
    <lastBuildDate>Mon, 26 Jul 2021 15:12:01 +0100</lastBuildDate>

    <item>
      <title>Java versions and features</title>
      <link>http://jbake.org/blog/2021/Java.html</link>
      <pubDate>Sat, 9 Jan 2021 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2021/Java.html</guid>
      	<description>
	&lt;h4&gt;JDK 8 (LTS)&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;language-level support for lambda expressions and default methods (virtual extension methods) which allow the addition of methods to interfaces without breaking existing implementations.&lt;/li&gt;
&lt;li&gt;Project Nashorn, a JavaScript runtime which allows developers to embed JavaScript code within applications&lt;/li&gt;
&lt;li&gt;Annotation on Java types&lt;/li&gt;
&lt;li&gt;Unsigned integer arithmetic&lt;/li&gt;
&lt;li&gt;Repeating annotations&lt;/li&gt;
&lt;li&gt;Date and time API&lt;/li&gt;
&lt;li&gt;Statically-linked JNI libraries&lt;/li&gt;
&lt;li&gt;Launch JavaFX applications (direct launching of JavaFX application JARs)&lt;/li&gt;
&lt;li&gt;Remove the permanent generation&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 9&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Modularization of the JDK under Project Jigsaw (Java Platform Module System)&lt;/li&gt;
&lt;li&gt;Ahead-of-time compilation&lt;/li&gt;
&lt;li&gt;Interface private methods&lt;/li&gt;
&lt;li&gt;Compact Strings Improvement&lt;/li&gt;
&lt;li&gt;JShell&lt;/li&gt;
&lt;li&gt;Stream of Dates&lt;/li&gt;
&lt;li&gt;Stream API Improvements
&lt;ul&gt;
&lt;li&gt;Limiting Stream with &lt;code&gt;takeWhile()&lt;/code&gt; and &lt;code&gt;dropWhile()&lt;/code&gt; methods&lt;/li&gt;
&lt;li&gt;Overloaded Stream iterate method&lt;/li&gt;
&lt;li&gt;New Stream &lt;code&gt;ofNullable()&lt;/code&gt; method&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Immutable Collections with Factory Methods&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 10&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Local Variable Type Inference&lt;/li&gt;
&lt;li&gt;Time-Based Release Versioning&lt;/li&gt;
&lt;li&gt;Garbage-Collector Interface&lt;/li&gt;
&lt;li&gt;Parallel Full GC for G1&lt;/li&gt;
&lt;li&gt;Heap Allocation on Alternative Memory Devices&lt;/li&gt;
&lt;li&gt;Consolidate the JDK Forest into a Single Repository&lt;/li&gt;
&lt;li&gt;Application Class-Data Sharing&lt;/li&gt;
&lt;li&gt;Additional Unicode Language-Tag Extensions&lt;/li&gt;
&lt;li&gt;Root Certificates&lt;/li&gt;
&lt;li&gt;Experimental Java-Based JIT Compiler&lt;/li&gt;
&lt;li&gt;Thread-Local Handshakes&lt;/li&gt;
&lt;li&gt;Remove the Native-Header Generation Tool&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 11 (LTS)&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;HTTP Client API&lt;/li&gt;
&lt;li&gt;Launch Single-File Programs Without Compilation&lt;/li&gt;
&lt;li&gt;String API Changes
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String.repeat(Integer)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String.isBlank()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String.strip()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String.lines()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Collection.toArray(IntFunction)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Files.readString()&lt;/code&gt; and &lt;code&gt;Files.writeString()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Optional.isEmpty()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 12&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Collectors.teeing() in Stream API&lt;/li&gt;
&lt;li&gt;String API Changes
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String.indent()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String.transform()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String constants&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Files.mismatch(Path, Path)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compact Number Formatting&lt;/li&gt;
&lt;li&gt;Support for Unicode 11&lt;/li&gt;
&lt;li&gt;Switch Expressions (Preview)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 13&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Enhancements for Switch Expressions&lt;/li&gt;
&lt;li&gt;Text Blocks instead of Raw String Literals&lt;/li&gt;
&lt;li&gt;Under the hood :
&lt;ul&gt;
&lt;li&gt;Dynamic CDS Archives&lt;/li&gt;
&lt;li&gt;ZGC returns unused storage&lt;/li&gt;
&lt;li&gt;Renewed Socket APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 14&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;Pattern Matching for instanceof&lt;/li&gt;
&lt;li&gt;Non-Volatile Mapped Byte Buffers&lt;/li&gt;
&lt;li&gt;Helpful NullPointerExceptions&lt;/li&gt;
&lt;li&gt;Packaging Tool - jpackage&lt;/li&gt;
&lt;li&gt;NUMA-Aware Memory Allocation for G1&lt;/li&gt;
&lt;li&gt;JFR Event Streaming&lt;/li&gt;
&lt;li&gt;Records (Preview)&lt;/li&gt;
&lt;li&gt;Deprecate the Solaris and SPARC Ports&lt;/li&gt;
&lt;li&gt;Build-configuration changes&lt;/li&gt;
&lt;li&gt;Remove the Concurrent Mark Sweep (CMS) Garbage Collector&lt;/li&gt;
&lt;li&gt;JEP 368: Text Blocks (Second Preview)&lt;/li&gt;
&lt;li&gt;JEP 370: Foreign-Memory Access API (Incubator)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 15&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JEP 339:&lt;/strong&gt; Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 360:&lt;/strong&gt; Sealed Classes (Preview)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 371:&lt;/strong&gt; Hidden Classes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 372:&lt;/strong&gt; Remove the Nashorn JavaScript Engine&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 374:&lt;/strong&gt; Disable and Deprecate Biased Locking&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 375:&lt;/strong&gt; Pattern Matching for instanceof (Second Preview)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 377:&lt;/strong&gt; ZGC: A Scalable Low-Latency Garbage Collector&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 378:&lt;/strong&gt; Text Blocks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 379:&lt;/strong&gt; Shenandoah: A Low-Pause-Time Garbage Collector&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 381:&lt;/strong&gt; Remove the Solaris and SPARC Ports&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 383:&lt;/strong&gt; Foreign-Memory Access API (Second Incubator)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 384:&lt;/strong&gt; Records (Second Preview)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 385:&lt;/strong&gt; Deprecate RMI Activation for Removal&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;JDK 16&lt;/h4&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JEP 338:&lt;/strong&gt; Vector API (Incubator)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jdk.incubator.vector&lt;/code&gt;, that provides vector computation (i.e. SIMD) supported by hardware instructions when available (e.g. SSE, AVX) and providing a “graceful degradation” to software implementation when SIMD hardware support is not available&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 376:&lt;/strong&gt; &lt;em&gt;ZGC&lt;/em&gt;: Concurrent Thread-Stack Processing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 380:&lt;/strong&gt; Unix-Domain Socket Channels
&lt;ul&gt;
&lt;li&gt;UNIX-domain sockets (&lt;em&gt;AF_UNIX&lt;/em&gt;) through &lt;code&gt;java.net.UnixDomainSocketAddress&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 386:&lt;/strong&gt; Alpine Linux Port&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 387:&lt;/strong&gt; Elastic Metaspace&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 388:&lt;/strong&gt; Windows/AArch64 Port&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 389:&lt;/strong&gt; Foreign Linker API (Incubator)
&lt;ul&gt;
&lt;li&gt;This API will offer a pure-Java way to access native code, replacing JNI.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 390:&lt;/strong&gt; Warnings for Value-Based Classes
&lt;ul&gt;
&lt;li&gt;Primitive wrapper classes, that are annotated as &lt;code&gt;@jdk.internal.ValueBased&lt;/code&gt;, will have their constructors which are already marked as deprecated in Java 9, will produce removal warnings&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 392:&lt;/strong&gt; Packaging Tool
&lt;ul&gt;
&lt;li&gt;jpackage becomes a standard feature&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 393:&lt;/strong&gt; Foreign-Memory Access API (Third Incubator)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 394:&lt;/strong&gt; Pattern Matching for instanceof&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 395:&lt;/strong&gt; Records&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 396:&lt;/strong&gt; Strongly Encapsulate JDK Internals by Default&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JEP 397:&lt;/strong&gt; Sealed Classes (Second Preview)&lt;br /&gt;
&lt;code&gt;{&amp;quot;mode&amp;quot;:&amp;quot;full&amp;quot;,&amp;quot;isActive&amp;quot;:false}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

	</description>
    </item>
    <item>
      <title>Hello World !</title>
      <link>http://jbake.org/blog/2021/HelloWorld.html</link>
      <pubDate>Fri, 1 Jan 2021 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2021/HelloWorld.html</guid>
      	<description>
	&lt;p&gt;Hey Guys...&lt;br /&gt;
This is my blog, I am trying out JBake..&lt;/p&gt;

	</description>
    </item>

  </channel> 
</rss>
